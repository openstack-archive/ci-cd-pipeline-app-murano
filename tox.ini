[tox]
minversion = 1.6
skipsdist = True
envlist = units, linters
skip_missing_interpreters = True

[testenv]
setenv = VIRTUAL_ENV={envdir}
         LANG=en_US.UTF-8
         LANGUAGE=en_US:en
         LC_ALL=C
passenv = OS_* MURANO* *ENDPOINT*
deps=
     pytz
     extras
     python-subunit
     debtcollector
    -r{toxinidir}/test-requirements.txt
distribute = false

[testenv:venv]
commands = {posargs:}

[testenv:deploy_cicd_apps]
commands = python -m unittest tests.test_cicd_apps.MuranoCiCdTest.test_deploy_cicd

[testenv:run_cicd_flow]
commands = python -m unittest tests.test_cicd_apps_flow.MuranoCiCdFlowTest.test_run_cicd_flow

[testenv:hacking]
deps=
    ipdb
    -r{toxinidir}/test-requirements.txt
commands = python -m unittest tests.test_cicd_apps.MuranoCiCdTest.test_deploy_cicd

[testenv:units]
commands =
  python -m unittest discover unittests --pattern=*.py

[testenv:bindep]
# Do not install any requirements. We want this to be fast and work even if
# system dependencies are missing, since it's used to tell you what system
# dependencies are missing! This also means that bindep must be installed
# separately, outside of the requirements files.
deps = bindep
commands = bindep test

[testenv:shellcheck]
# 'shellcheck' is not an Python package, so it can be run w\o
# virtual env. But tox is a usable wrapper to run any kind of tests -
# let's use it for common test-run as well - for unification purposes.
whitelist_externals = shellcheck
commands = {toxinidir}/tools/jenkins/shellcheck.sh {toxinidir}

[testenv:yaml-syntaxcheck]
deps = yamllint
commands = {toxinidir}/tools/jenkins/yamllint.sh {toxinidir}

[testenv:linters]
# linters env - it's a combination of check's (usually syntax)
# for aggregate non-destructive run's. Used only in openstack-infra ci for
# decrease resource usage.
# Current duplicate list:
# shellcheck
# yaml-syntaxcheck
#
# We need to suppress exit code from 'command1', to be able run 'command2';
# Otherwise, if some command failed - exit code from tox itself will be 1
ignore_errors=True
deps = yamllint
whitelist_externals = shellcheck
commands =
   {toxinidir}/tools/jenkins/shellcheck.sh {toxinidir}
   {toxinidir}/tools/jenkins/yamllint.sh {toxinidir}
