Namespaces:
  =: org.openstack.ci_cd_pipeline_murano_app.puppet
  std: io.murano
  res: io.murano.resources
  sys: io.murano.system
  ci_cd_pipeline_murano_app: org.openstack.ci_cd_pipeline_murano_app
  puppet: org.openstack.ci_cd_pipeline_murano_app.puppet
  net: org.openstack.ci_cd_pipeline_murano_app.utils.net

Name: PuppetServerDemo

Extends: std:Application

Properties:
  server:
    Contract: $.class(puppet:PuppetInstance)
    Usage: InOut
  clients:
    Contract:
      - $.class(puppet:PuppetInstance)
    Default: []
  name:
    Contract: $.string().notNull()
    Default: 'PuppetServerDemo'

Methods:
  initialize:
    Body:
      - $._environment: $.find(std:Environment).require()

  deploy:
    Body:
      - Parallel:
        - If: $.server = null
          Then:
            - $this.server: new(puppet:PuppetInstance, $this._environment,
                name => 'master',
                flavor => 'm1.medium',
                image => 'ubuntu-14.04-m-agent.qcow2',
                keyname => 'common',
                availabilityZone => 'nova',
                assignFloatingIp => true)
            - $this.server.deploy()

        - If: len($this.clients) = 0
          Then:
            - $this.clients: range(2).select(
                new(puppet:PuppetInstance, $this._environment,
                  name => concat('client', $),
                  flavor => 'm1.medium',
                  image => 'ubuntu-14.04-m-agent.qcow2',
                  keyname => 'common',
                  availabilityZone => 'nova',
                  assignFloatingIp => true))

            - $this.clients.select($.deploy())


      - $master: new( puppet:PuppetServer,  masterInstance => $this.server)
      - $this.clients.select($master.addClientInstance($))
      - $master.configure()





