#  Licensed under the Apache License, Version 2.0 (the "License"); you may
#  not use this file except in compliance with the License. You may obtain
#  a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.

Namespaces:
  =: org.openstack.murano.lbaas
  res: io.murano.resources
  conf: io.murano.configuration
  sys: io.murano.system

Name: HAProxyPool
Extends: Pool

Properties:

  algorithm:
    Contract: $.string().check($ in ['roundrobin', 'leastconn', 'source'])

  protocol:
    Contract: $.string().check($ in ['http', 'tcp'])

  listener:
    Contract: $.class(HAProxyListener).notNull()


Methods:
  addMember:
    Arguments:
      - host:
          Contract: $.string().notNull()
      - address:
          Contract: $.string().notNull()
      - port:
          Contract: $.int().check($>0)
    Body:
      - $m:
          host: $host
          port: $port
          address: $address
      - If: not $m in $this.members
        Then:
          - $this.members: $this.members.append($m)


  generateConfiguration:
    Body:
      - $serverString: $this.members.select(format('  server {0} {1}:{2}', $.host, $.address, $.port)).join('\n')
      - $res: new(sys:Resources)

      - $backEndConfig: $res.string('backEndConfig.template').replace(
          dict('$name'=> name($this),
               '$servers'=>$serverString,
               '$mode'=>$this.listener.protocol,
               '$balance'=>$this.algorithm))

      - $frontEndConfig: $this.listener.generateConfiguration(name($this))
      - Return: list($backEndConfig, $frontEndConfig).join('\n\n')
